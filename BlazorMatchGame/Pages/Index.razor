@page "/"
@using System.Timers
@using AntDesign
@using Blazored.LocalStorage;
@using Microsoft.AspNetCore.Components
@inject IMessageService _message
@inject NotificationService _notice
@inject IJSRuntime JS
@inject ILocalStorageService localStorage
@inject ISyncLocalStorageService SyncLocalStorageService
<style>
    .main {
        width:800px;
        margin: 0 auto;
    }

    .row {
        width: 400px;
        margin-right: 15px;
    }

    .btn {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }

    .button {
        display:flex;
        margin: 10px
    }

    .btn-style
    {
        margin: 10px;
        border-radius: 5px;
        border: none;
        height: 40px;
        width: 100px;
    }

        .btn-style:hover{
            background: #0e7eff;
            color: #fff;
        }

    .rank {
        position:relative;
        width: 200px;
        height: 400px;
        overflow: auto;
        background: #ffffff;
        border-radius: 12px;
        padding: 0px 16px 14px 16px;
        box-shadow: 0px 6px 28px 0px rgb(0 0 0 / 12%), 0px 6px 16px -8px rgb(0 0 0 / 8%);
    }

    .rank-title
    {
        width:165px;
        position:absolute;
        background: #ffffff;
        padding-left:50px;
    }
    .flex{
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .isHidden{
        visibility:hidden;
    }

    .flex:focus .isHidden {
        visibility:visible!important;
    }

    .isHidden:empty
    {
        visibility: visible!important;
        background: #ccc;
        height: 90%;
        width: 100%;
        margin: 0;
    }
    </style>

<div class="main">
    <div class="button">
        <button class="btn-style" @onclick="SelectEasyAsync">easy</button>
        <button class="btn-style" @onclick="SelectHardAsync">hard</button>
        <button class="btn-style" @onclick="SelectCheat">cheat</button>
        <span style="display:flex;align-items: center;margin-left:15px;font-weight:700">
            excessNum:<Input Bordered="false" TValue="int" @bind-Value="@excessNum" />
        </span>
    </div>
    @if (isPlay)
    {
        <div style="display:flex;">
            <div class="row" style="pointer-events:@isClick;width:@levelWidth;">
                @for (var animalNumber = 0; animalNumber < shuffledAnimals.Count; animalNumber++)
                {
                    var animal = shuffledAnimals[animalNumber];
                    var uniqueDescription = $"Button #{animalNumber}";

                    <div class="clo-3">
                        <div @onclick="@(() => ButtonClickAsync(animal, uniqueDescription))"
                     type="button" class="btn btn-outline-dark flex" tabindex="1">
                            <h1 class="isHidden" id="@($"cheat{animalNumber}")">
                                @animal
                            </h1>
                        </div>
                    </div>
                }
            </div>
            <div class="rank">
                <h3 class="rank-title">Rank</h3>
                <div style="margin-top:37px;"></div>
                <div>
                    @{
                        var index = 0;
                        foreach (var item in rankLists)
                        {
                            index++;
                            <div>
                                <span style="margin-left:40px;">@index</span><span style="margin-left:40px;">@item</span>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <h2 style="color:deepskyblue">The game does not start,Please select Easy or Hard!</h2>
    }

    <div class="row">
        <h1>@overString </h1>
    </div>
    <div class="row">
        <h2>Matches found: @matchesFound</h2>
    </div>
    <div class="row">
        <h2>Time: @counter s</h2>
    </div>
    <div class="row">
        <h2>Score: @score</h2>
    </div>
</div>

@code {



}